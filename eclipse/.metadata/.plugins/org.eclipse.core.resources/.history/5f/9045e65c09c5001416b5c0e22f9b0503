package com.sigurd4.sigurdsepicadventurestuff.event;

import com.sigurd4.sigurdsepicadventurestuff.M;
import com.sigurd4.sigurdsepicadventurestuff.extended.EntityExtendedPlayer;
import com.sigurd4.sigurdsepicadventurestuff.packet.PacketPlayerProps;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraftforge.event.entity.living.LivingEvent.LivingUpdateEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

@SideOnly(Side.SERVER)
public class HandlerServer extends HandlerCommon
{
	//minecraftforge events for server only here!

	@SubscribeEvent
	public void livingUpdateEvent(LivingUpdateEvent event)
	{
		if(event.entity instanceof EntityPlayer)
		{
			EntityPlayer player = (EntityPlayer)event.entity;
			EntityExtendedPlayer props = EntityExtendedPlayer.get(event.player);

			/**makes it so that players keep certain data upon death**/
			if(playerDeathData.get(event.player) != null && event.player.getHealth() > 0)
			{
				props.loadNBTData(playerDeathData.get(event.player), false);
				playerDeathData.remove(event.player);
			}
			if(playerDeathData.get(event.player) == null && event.player.getHealth() <= 0 || event.player.deathTime > 0)
			{
				NBTTagCompound playerData = new NBTTagCompound();
				props.saveNBTData(playerData, false);
				playerDeathData.put(event.player, playerData);
			}

			/**give data to client**/
			if(event.player instanceof EntityPlayerMP)
			{
				NBTTagCompound compound = new NBTTagCompound();
				M.network.sendTo(new PacketPlayerProps(props), (EntityPlayerMP)event.player);
			}
		}
	}
}
